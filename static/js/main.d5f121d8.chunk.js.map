{"version":3,"sources":["constants/index.tsx","reportWebVitals.ts","utils/getLibrary.ts","connectors/index.tsx","components/ChainAddButton/index.js","components/ConnectionBadge/index.tsx","components/DarkToggle/index.tsx","hooks/useDark.tsx","components/FeaturedNfts/index.tsx","constants/messages.tsx","data/collectibles.ts","constants/routes.tsx","components/Hero/index.tsx","components/LeafletMap/index.tsx","components/Logo/styles.ts","components/Navbar/index.js","components/RarityBadge/index.tsx","components/NFTCard/index.tsx","components/OnboardingButton/index.js","constants/text.tsx","components/SelectCollection/index.js","components/Sidebar/index.js","pages/Asset/index.js","pages/Collections/index.js","pages/Explore/index.js","pages/Home/index.tsx","pages/Onboarding/index.tsx","pages/Wallet/index.tsx","pages/App.tsx","hooks/useInactiveListener.tsx","hooks/useEagerConnect.tsx","index.tsx"],"names":["supportedChainIds","ChainId","AVALANCHE_MAINNET_PARAMS","chainId","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","AVALANCHE_TESTNET_PARAMS","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getLibrary","provider","library","Web3Provider","pollingInterval","injected","InjectedConnector","ChainAddButton","props","label","params","useState","buttonText","setButtonText","isDisabled","setIsDisabled","useEffect","window","ethereum","on","_chainId","location","reload","a","request","method","result","console","error","requestChain","onClick","className","disabled","NETWORK_LABELS","ConnectionBadge","useWeb3React","account","fill","viewBox","cx","cy","r","navigator","clipboard","writeText","alert","DarkToggle","mini","dark","setDark","isDark","document","getElementsByTagName","classList","contains","localStorage","documentElement","toggle","useDark","toggleDark","type","FeaturedNfts","getItems","items","setItems","map","item","index","NFTCard","id","group","img","rarity","description","cost","collectibles","lat","lng","zoom","ROUTE_ASSETS","ROUTE_COLLECTIONS","ROUTE_DEFAULT","ROUTE_EXPLORE","ROUTE_ONBOARDING","ROUTE_WALLET","Hero","to","LocationMarker","selected","position","setPosition","useMap","icon","L","iconUrl","iconSize","iconAnchor","popupAnchor","shadowUrl","undefined","latlng","LatLng","flyTo","Marker","Popup","ItemMarker","center","FeatureGroup","pathOptions","color","Circle","fillColor","radius","stroke","LeafletMap","MapContainer","scrollWheelZoom","TileLayer","url","styled","navigation","Navbar","mobileMenuOpen","setMobileMenuOpen","aria-hidden","htmlFor","placeholder","length","aria-label","href","OnboardingButton","Root","show","as","Fragment","static","open","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","src","alt","children","child","RarityBadge","badgeClass","setDisabled","onboarding","useRef","current","MetaMaskOnboarding","isMetaMaskInstalled","stopOnboarding","startOnboarding","classNames","classes","filter","Boolean","join","SelectCollection","collections","history","useHistory","useLocation","setSelected","includes","pathname","push","value","onChange","Label","Button","Options","collection","Option","active","sidebarNavigation","HomeIcon","exact","CollectionIcon","GlobeIcon","CreditCardIcon","Sidebar","setMini","activeClassName","Asset","useParams","asset","setAsset","getAsset","buyAsset","val","BN","log","transactionParameters","from","ethers","utils","hexValue","gasPrice","gas","txHash","catch","_arr","indexOf","concat","sort","Collections","useCallback","Explore","aria-labelledby","tabIndex","Home","Onboarding","target","rel","Wallet","App","connector","activatingConnector","setActivatingConnector","suppress","activate","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","tried","setTried","isAuthorized","useEagerConnect","render","path","component","Web3ProviderNetwork","createWeb3ReactRoot","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.d5f121d8.chunk.js","sourcesContent":["export const NetworkContextName = \"NETWORK\";\nexport const GAS_PRICE = 225;\nexport const WALLET_ADDRESS = \"0x6cBEd289596f757fC406eE3AB4aC9E83cFb48B92\";\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\nexport const supportedChainIds = [1, 43113, 43114];\n\nexport const ChainId = {\n  ETHEREUM: 1,\n  FUJI: 43113,\n  AVALANCHE: 43114,\n};\n\nexport const AVALANCHE_MAINNET_PARAMS = {\n  chainId: \"0xa86a\",\n  chainName: \"Avalanche Mainnet C-Chain\",\n  nativeCurrency: {\n    name: \"Avalanche\",\n    symbol: \"AVAX\",\n    decimals: 18,\n  },\n  rpcUrls: [\"https://api.avax.network/ext/bc/C/rpc\"],\n  blockExplorerUrls: [\"https://cchain.explorer.avax.network/\"],\n};\n\nexport const AVALANCHE_TESTNET_PARAMS = {\n  chainId: \"0xa869\",\n  chainName: \"Avalanche Testnet C-Chain\",\n  nativeCurrency: {\n    name: \"Avalanche\",\n    symbol: \"AVAX\",\n    decimals: 18,\n  },\n  rpcUrls: [\"https://api.avax-test.network/ext/bc/C/rpc\"],\n  blockExplorerUrls: [\"https://cchain.explorer.avax-test.network/\"],\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Web3Provider } from '@ethersproject/providers'\n\nexport default function getLibrary(provider: any): Web3Provider {\n    const library = new Web3Provider(provider, 'any')\n    library.pollingInterval = 15000\n    return library\n}\n","import { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { supportedChainIds } from \"../constants\";\n\nexport const injected = new InjectedConnector({\n  supportedChainIds,\n});\n","import React, { useEffect, useState } from \"react\";\n\nconst TEXT_DEFAULT = \"Switch to \";\nconst TEXT_CONNECTED = \"Connected to \";\n\nexport default function ChainAddButton(props) {\n  const { label, params } = props;\n  const [buttonText, setButtonText] = useState(label);\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  useEffect(() => {\n    // TODO: move higher up?\n    window.ethereum?.on(\"chainChanged\", (_chainId) => window.location.reload());\n\n    const requestChain = async () => {\n      try {\n        await window.ethereum\n          ?.request({ method: \"eth_chainId\" })\n          .then((result) => {\n            switch (result) {\n              case params.chainId:\n                setButtonText(TEXT_CONNECTED + label);\n                setIsDisabled(true);\n                break;\n              default:\n                setButtonText(TEXT_DEFAULT + label);\n                break;\n            }\n          });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    requestChain();\n  }, [label, params]);\n\n  const onClick = async () => {\n    try {\n      await window.ethereum.request({\n        method: \"wallet_addEthereumChain\",\n        params: [params],\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <button\n      className='btn disabled:opacity-50 disabled:cursor-not-allowed'\n      onClick={onClick}\n      disabled={isDisabled}>\n      {buttonText}\n    </button>\n  );\n}\n","import React from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { ChainId } from \"../../constants\";\n\nconst NETWORK_LABELS = {\n  [ChainId.ETHEREUM]: \"Ethereum\",\n  [ChainId.FUJI]: \"Fuji\",\n  [ChainId.AVALANCHE]: \"Avalanche\",\n};\n\nexport default function ConnectionBadge() {\n  const { chainId, account } = useWeb3React();\n  const copyToClipboard = () => {\n    if (account) {\n      navigator.clipboard.writeText(account);\n      alert(\"Copied to clipboard: \" + account);\n    }\n  };\n\n  return (\n    <div className='flex text-xs font-medium'>\n      <span className='inline-flex items-center px-3 py-1.5 rounded-l-md border border-green-500 bg-green-50 text-green-700'>\n        <svg\n          className='-ml-0.5 mr-1.5 h-2 w-2 text-green-500 flex-shrink-0'\n          fill='currentColor'\n          viewBox='0 0 8 8'>\n          <circle cx='4' cy='4' r='3' />\n        </svg>\n        {chainId && NETWORK_LABELS[chainId]}\n      </span>\n      <span\n        className='inline-flex px-3 py-1.5 w-48 overflow-hidden rounded-r-md border border-l-0 border-green-500 bg-green-50 text-green-700 hover:bg-green-100 cursor-pointer'\n        onClick={copyToClipboard}>\n        <span className='truncate'>{account}</span>\n      </span>\n    </div>\n  );\n}\n","import { MoonIcon, SunIcon } from \"@heroicons/react/solid\";\nimport { useDark } from \"../../hooks\";\n\nexport default function DarkToggle({ mini }: { mini: Boolean }) {\n  const [dark, toggleDark] = useDark();\n\n  return (\n    <button\n      type='button'\n      onClick={toggleDark}\n      className='flex flex-1 items-center rounded-full text-white px-4 py-3'>\n      {dark ? (\n        <SunIcon className='h-6 w-6' />\n      ) : (\n        <MoonIcon className='h-6 w-6' />\n      )}\n      {!mini && <span className='ml-3'>{dark ? \"Light\" : \"Dark\"}</span>}\n    </button>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport default function useDark() {\n  const [dark, setDark] = useState<boolean>(false);\n\n  // Whenever the user explicitly chooses to respect the OS preference\n  //   const removeTheme = () => {\n  //     localStorage.removeItem(\"dark\");\n  //   };\n\n  const toggleDark = () => {\n    document.documentElement.classList.toggle(\"dark\");\n    setDark(!dark);\n  };\n\n  // On page load or when changing dark\n  // Initial logic in /public/index.html\n  useEffect(() => {\n    const isDark = document\n      .getElementsByTagName(\"html\")[0]\n      .classList.contains(\"dark\");\n\n    setDark(isDark);\n    localStorage.dark = isDark;\n  }, [dark]);\n\n  return [dark, toggleDark] as const;\n}\n","import { useEffect, useState } from \"react\";\nimport { NFTCard } from \"../index\";\nimport { NFTProps } from \"../../typings/nft\";\n\nexport default function FeaturedNfts({\n  getItems,\n  type,\n}: {\n  getItems: Function;\n  type: string;\n}) {\n  const [items, setItems] = useState<Array<NFTProps>>([]);\n\n  useEffect(() => {\n    setItems(getItems(type));\n  }, [getItems, type]);\n\n  return (\n    <>\n      {items &&\n        items.map((item: NFTProps, index: number) => (\n          <NFTCard\n            key={index}\n            id={item.id}\n            group={item.group}\n            img={item.img}\n            name={item.name}\n            rarity={item.rarity}\n            description={item.description}\n            cost={item.cost}\n            location={item.location}\n          />\n        ))}\n    </>\n  );\n}\n","const MESSAGE_PROCESSING = \"Processing Request\";\nconst MESSAGE_COMPLETE = \"Request Complete\";\nconst MESSAGE_FAIL = \"Request Failed\";\nconst MESSAGE_VIEW_ALL = \"View All\";\n\nexport { MESSAGE_PROCESSING, MESSAGE_COMPLETE, MESSAGE_FAIL, MESSAGE_VIEW_ALL };\n","import { NFTProps } from '../typings/nft';\n// https://www.latlong.net/\n\nexport const collectibles: Array<NFTProps> = [\n    {\n        id: 'BZTDWRaK6rQmnSLrrq4PANBeueYfDRFkpHV9KcMtjxL19wsJ1',\n        group: 'Capitals',\n        img:\n            \"https://gateway.pinata.cloud/ipfs/QmWdDjeh7R5K9w7uzh7bSMgmuDoNTMYXVY5ER69LdHwWc4\",\n        name: \"Cape Town\",\n        rarity: 'Epic',\n        description: 'Capital City of South Africa.',\n        cost: 15,\n        location: {\n            lat: -33.924870,\n            lng: 18.424055,\n            zoom: 5\n        },\n    },\n    {\n        id: 'BZTDWRaK6rQmnSLrrq4PANBeueYfDRFkpHV9KcMtjxL19wsJ2',\n        group: 'Capitals',\n        img:\n            \"https://images.unsplash.com/photo-1452838269443-c86e6a3134f9?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=512&q=80\",\n        name: \"Bangkok\",\n        rarity: 'Rare',\n        description: 'Capital City of Thailand.',\n        cost: 10,\n        location: {\n            lat: 13.756331,\n            lng: 100.501762,\n            zoom: 5\n        }\n    },\n    {\n        id: 'BZTDWRaK6rQmnSLrrq4PANBeueYfDRFkpHV9KcMtjxL19wsJ3',\n        group: 'Capitals',\n        img:\n            \"https://gateway.pinata.cloud/ipfs/QmWdDjeh7R5K9w7uzh7bSMgmuDoNTMYXVY5ER69LdHwWc4\",\n        name: \"Jakarta\",\n        rarity: 'Rare',\n        description: 'Capital City of Indonesia.',\n        cost: 10,\n        location: {\n            lat: -6.175110,\n            lng: 106.865036,\n            zoom: 5\n        }\n    },\n    {\n        id: 'BZTDWRaK6rQmnSLrrq4PANBeueYfDRFkpHV9KcMtjxL19wsJ4',\n        group: 'Capitals',\n        img:\n            \"https://gateway.pinata.cloud/ipfs/QmWdDjeh7R5K9w7uzh7bSMgmuDoNTMYXVY5ER69LdHwWc4\",\n        name: \"Guatemala City\",\n        rarity: 'Common',\n        description: 'Capital City of Guatemala.',\n        cost: 5,\n        location: {\n            lat: 14.634915,\n            lng: -90.506882,\n            zoom: 5\n        }\n    },\n    {\n        id: 'BZTDWRaK6rQmnSLrrq4PANBeueYfDRFkpHV9KcMtjxL19wsJ5',\n        group: 'Capitals',\n        img:\n            \"https://images.unsplash.com/photo-1452838269443-c86e6a3134f9?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=512&q=80\",\n        name: \"Jamestown\",\n        rarity: 'Common',\n        description: 'Capital City of Saint Helena.',\n        cost: 5,\n        location: {\n            lat: 36.434269,\n            lng: -84.935371,\n            zoom: 5\n        }\n    },\n    {\n        id: 'QmQBSaJvXv3SfYMpEEyVzhtUCquhTFxvo5F7gvhLRGvMuB',\n        group: 'Countries',\n        img:\n            \"https://gateway.pinata.cloud/ipfs/QmQBSaJvXv3SfYMpEEyVzhtUCquhTFxvo5F7gvhLRGvMuB\",\n        name: \"Afghanistan\",\n        rarity: 'Common',\n        description: 'Here is an NFT description 1.',\n        cost: 1,\n        location: {\n            lat: 33.93911,\n            lng: 67.709953,\n            zoom: 4\n        },\n    },\n    {\n        id: 'QmWbUonVdzNyCMqAdFC2URpc9GXV5NwdeHbitxDcRzydfY',\n        group: 'Countries',\n        img:\n            \"https://gateway.pinata.cloud/ipfs/QmWbUonVdzNyCMqAdFC2URpc9GXV5NwdeHbitxDcRzydfY\",\n        name: \"Afghanistan\",\n        rarity: 'Epic',\n        description: 'Here is an NFT description 2.',\n        cost: 2,\n        location: {\n            lat: 33.93911,\n            lng: 67.709953,\n            zoom: 4\n        },\n    },\n    {\n        id: 'QmaLAahk2f1Qyvtz171thg85ArETnXyZm47fyepNvy9bnP',\n        group: 'Countries',\n        img:\n            \"https://gateway.pinata.cloud/ipfs/QmaLAahk2f1Qyvtz171thg85ArETnXyZm47fyepNvy9bnP\",\n        name: \"Afghanistan\",\n        rarity: 'Rare',\n        description: 'Here is an NFT description 3.',\n        cost: 3,\n        location: {\n            lat: 33.93911,\n            lng: 67.709953,\n            zoom: 4\n        },\n    },\n    {\n        id: 'QmZ8ArvpTy9J4D9gMzsPgitwBm2NrGFhkQDBkEAhRFDAxp',\n        group: 'Countries',\n        img:\n            \"https://gateway.pinata.cloud/ipfs/QmZ8ArvpTy9J4D9gMzsPgitwBm2NrGFhkQDBkEAhRFDAxp\",\n        name: \"Andorra\",\n        rarity: 'Rare',\n        description: 'Here is an NFT description 4.',\n        cost: 3,\n        location: {\n            lat: 42.506285,\n            lng: 1.521801,\n            zoom: 4\n        },\n    },\n    {\n        id: 'BZTDWRaK6rQmnSLrrq4PANBeueYfDRFkpHV9KcMtjxL19wsJ11',\n        group: 'Countries',\n        img:\n            \"https://gateway.pinata.cloud/ipfs/QmTs4qs7gzeG1ssh1DhqB7BHMbGHoj2c5YjUVcWu2QTJeN\",\n        name: \"Australia\",\n        rarity: 'Common',\n        description: 'Here is an NFT description 5.',\n        cost: 5,\n        location: {\n            lat: -25.274398,\n            lng: 133.775136,\n            zoom: 4\n        }\n    },\n    {\n        id: 'QmQWmYPT9xGgTwDS97q6JwPoBagKcGNYoaih2x8cArRPLm',\n        group: 'Countries',\n        img:\n            \"https://gateway.pinata.cloud/ipfs/QmQWmYPT9xGgTwDS97q6JwPoBagKcGNYoaih2x8cArRPLm\",\n        name: \"Argentina\",\n        rarity: 'Common',\n        description: 'Here is an NFT description 6.',\n        cost: 1,\n        location: {\n            lat: -38.416097,\n            lng: -63.616672,\n            zoom: 4\n        }\n    },\n];","const ROUTE_ASSETS = \"/assets\";\nconst ROUTE_COLLECTIONS = \"/collections\";\nconst ROUTE_DEFAULT = \"/home\";\nconst ROUTE_EXPLORE = \"/explore\";\nconst ROUTE_ONBOARDING = \"/\";\nconst ROUTE_WALLET = \"/wallet\";\n\n// Used to pull a convenient name for analytics tracking events. The key must\n// be react-router ready path, and can include params such as :id for popup windows\n// const PATH_NAME_MAP = {\n//   [`${ROUTE_ASSETS}/:id`]: `Asset Page`,\n//   [`${ROUTE_COLLECTIONS}/:id`]: `Collection Page`,\n//   [ROUTE_DEFAULT]: \"Home\",\n//   [ROUTE_EXPLORE]: \"Map Page\",\n//   [ROUTE_ONBOARDING]: \"Onboard\",\n//   [ROUTE_WALLET]: \"Wallet Page\",\n// };\n\nexport {\n  ROUTE_ASSETS,\n  ROUTE_COLLECTIONS,\n  ROUTE_DEFAULT,\n  ROUTE_EXPLORE,\n  ROUTE_ONBOARDING,\n  ROUTE_WALLET,\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { ROUTE_COLLECTIONS } from \"../../constants/routes\";\n\nexport default function Hero() {\n  return (\n    <div className='p-4 sm:p-8 lg:p-12 -mx-4 sm:-mx-8 lg:-mx-12'>\n      <div className='mx-auto max-w-8xl py-8 md:py-12 lg:pb-20 text-center'>\n        <h1 className='tracking-tight font-extrabold text-gray-900 dark:text-white text-4xl sm:text-5xl xl:text-6xl'>\n          <span>Hodo </span>\n          <span className='text-blue-600 dark:text-white'>Network</span>\n        </h1>\n        <p className='mx-auto text-lg text-gray-500 dark:text-gray-400 sm:text-xl mt-4 md:mt-6'>\n          Welcome to the first marketplace for Georeferenced Non-Fungible Tokens\n          (gNFTs).\n        </p>\n        <div className='mt-8 sm:flex justify-center'>\n          <div>\n            <NavLink\n              to={`${ROUTE_COLLECTIONS}/All`}\n              className='btn btn--large w-full'>\n              Start Browsing\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport L from \"leaflet\";\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Popup,\n  useMap,\n  Circle,\n  FeatureGroup,\n} from \"react-leaflet\";\nimport { NFTProps } from \"../../typings/nft\";\nimport { ROUTE_ASSETS } from \"../../constants/routes\";\n\nconst units = \"AVAX\";\n\nfunction LocationMarker({ selected }: { selected: NFTProps }) {\n  const [position, setPosition] = useState<any>(null);\n  const map = useMap();\n  var icon = L.icon({\n    iconUrl: selected.img,\n    iconSize: [60, 60],\n    iconAnchor: [0, 0],\n    popupAnchor: [30, -8],\n    shadowUrl: undefined,\n  });\n\n  useEffect(() => {\n    const latlng = new L.LatLng(selected.location.lat, selected.location.lng);\n    setPosition(latlng);\n    map.flyTo(latlng, selected.location.zoom);\n  }, [selected]);\n\n  return position === null ? null : (\n    <Marker position={position} icon={icon}>\n      <Popup>\n        <div className='font-semibold text-base'>{selected.name}</div>\n        <div>\n          <span className='font-semibold'>Cost:</span> {selected.cost} {units}\n        </div>\n        <div>\n          <NavLink to={`${ROUTE_ASSETS}/${selected.id}`}>View NFT</NavLink>\n        </div>\n      </Popup>\n    </Marker>\n  );\n}\n\nfunction ItemMarker({ item }: { item: NFTProps }) {\n  const center = new L.LatLng(item.location.lat, item.location.lng);\n  const radiusInner = 5000;\n  const radiusOuter = 25000;\n  var icon = L.icon({\n    iconUrl: item.img,\n    iconSize: [48, 48],\n    iconAnchor: [0, 0],\n    popupAnchor: [30, -8],\n    shadowUrl: undefined,\n  });\n\n  return (\n    <FeatureGroup pathOptions={{ color: \"purple\" }}>\n      <Marker position={center} icon={icon}>\n        <Popup>{item.name}</Popup>\n      </Marker>\n      <Popup>{item.name}</Popup>\n      <Circle\n        center={center}\n        pathOptions={{ color: \"blue\", fillColor: \"blue\" }}\n        radius={radiusOuter}\n      />\n      <Circle\n        center={center}\n        pathOptions={{ color: \"red\", fillColor: \"red\" }}\n        radius={radiusInner}\n        stroke={false}\n      />\n    </FeatureGroup>\n  );\n}\n\nexport default function LeafletMap({\n  collectibles,\n  selected,\n  className,\n}: {\n  collectibles: Array<NFTProps>;\n  selected: NFTProps;\n  className?: string;\n}) {\n  const tileLayerUrl = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n  // const tileLayerUrl = \"http://c.tile.stamen.com/watercolor/{z}/{x}/{y}.jpg\";\n  // const tileLayerUrl = \"https://tiles.wmflabs.org/osm-no-labels/{z}/{x}/{y}.png\";\n\n  return (\n    <MapContainer\n      className={className}\n      center={[54.525963, 15.255119]}\n      zoom={3}\n      scrollWheelZoom={true}>\n      <TileLayer url={tileLayerUrl} />\n      <LocationMarker selected={selected} />\n      {collectibles.map((item) => (\n        <ItemMarker item={item} key={item.id} />\n      ))}\n    </MapContainer>\n  );\n}\n","import styled from 'styled-components';\n\nconst StyledLogo = styled.img`\n\tmax-height: 96px;\n\tmargin: 0 5px 0 0;\n`;\n\nexport { StyledLogo };\n","import React, { Fragment, useState } from \"react\";\nimport { SearchIcon } from \"@heroicons/react/solid\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { MenuIcon, XIcon } from \"@heroicons/react/outline\";\nimport { ConnectionBadge, OnboardingButton } from \"../index\";\n\nconst navigation = [\n  // { name: \"Reporting\", href: \"#\", children: [] },\n];\n\nexport default function Navbar() {\n  const { account } = useWeb3React();\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  return (\n    <header className='flex-shrink-0 relative h-16 bg-white dark:bg-gray-900 border-b dark:border-gray-800 flex items-center'>\n      <div className='absolute inset-y-0 right-0 pr-4 flex items-center sm:pr-6 md:hidden'>\n        <button\n          type='button'\n          className='-mr-2 inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-blue-600'\n          onClick={() => setMobileMenuOpen(true)}>\n          <span className='sr-only'>Open main menu</span>\n          <MenuIcon className='block h-6 w-6' aria-hidden='true' />\n        </button>\n      </div>\n\n      {/* Desktop nav area */}\n      <div className='hidden md:min-w-0 md:flex-1 md:flex md:items-center md:justify-between'>\n        <div className='min-w-0 flex-1'>\n          <div className='max-w-2xl relative text-gray-400 focus-within:text-gray-500 hidden'>\n            <label htmlFor='search' className='sr-only'>\n              Search\n            </label>\n            <input\n              id='search'\n              type='search'\n              placeholder='Search'\n              className='block w-full border-transparent pl-12 placeholder-gray-500 focus:border-transparent sm:text-sm focus:ring-0 dark:bg-gray-900'\n            />\n            <div className='pointer-events-none absolute inset-y-0 left-0 flex items-center justify-center pl-4'>\n              <SearchIcon className='h-5 w-5' aria-hidden='true' />\n            </div>\n          </div>\n        </div>\n        <div className='ml-10 pr-4 flex-shrink-0 flex items-center space-x-10'>\n          {navigation.length > 0 && (\n            <nav aria-label='Global' className='flex space-x-10'>\n              {navigation.map((item) => (\n                <Fragment key={item.name}>\n                  <a\n                    href={item.href}\n                    className='text-sm font-medium text-gray-900'>\n                    {item.name}\n                  </a>\n                </Fragment>\n              ))}\n            </nav>\n          )}\n          <div className='ml-6 flex space-x-4 items-center'>\n            {account ? <ConnectionBadge /> : <OnboardingButton />}\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile menu, show/hide this `div` based on menu open/closed state */}\n      <Transition.Root show={mobileMenuOpen} as={Fragment}>\n        <Dialog\n          as='div'\n          static\n          className='fixed inset-0 z-40 md:hidden'\n          open={mobileMenuOpen}\n          onClose={setMobileMenuOpen}>\n          <Transition.Child\n            as={Fragment}\n            enter='transition-opacity ease-linear duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='transition-opacity ease-linear duration-300'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'>\n            <Dialog.Overlay className='hidden sm:block sm:fixed sm:inset-0 sm:bg-gray-600 sm:bg-opacity-75' />\n          </Transition.Child>\n\n          <Transition.Child\n            as={Fragment}\n            enter='transition ease-out duration-150 sm:ease-in-out sm:duration-300'\n            enterFrom='transform opacity-0 scale-110 sm:translate-x-full sm:scale-100 sm:opacity-100'\n            enterTo='transform opacity-100 scale-100  sm:translate-x-0 sm:scale-100 sm:opacity-100'\n            leave='transition ease-in duration-150 sm:ease-in-out sm:duration-300'\n            leaveFrom='transform opacity-100 scale-100 sm:translate-x-0 sm:scale-100 sm:opacity-100'\n            leaveTo='transform opacity-0 scale-110  sm:translate-x-full sm:scale-100 sm:opacity-100'>\n            <nav\n              className='fixed z-40 inset-0 h-full w-full bg-white sm:inset-y-0 sm:left-auto sm:right-0 sm:max-w-sm sm:w-full sm:shadow-lg'\n              aria-label='Global'>\n              <div className='h-16 flex items-center justify-between px-4 sm:px-6'>\n                <a href='#none'>\n                  <img\n                    className='block h-8 w-auto'\n                    src='https://tailwindui.com/img/logos/workflow-mark.svg?color=blue&shade=500'\n                    alt='Workflow'\n                  />\n                </a>\n                <button\n                  type='button'\n                  className='-mr-2 inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-blue-600'\n                  onClick={() => setMobileMenuOpen(false)}>\n                  <span className='sr-only'>Close main menu</span>\n                  <XIcon className='block h-6 w-6' aria-hidden='true' />\n                </button>\n              </div>\n              <div className='mt-2 max-w-8xl mx-auto px-4 sm:px-6'>\n                <div className='relative text-gray-400 focus-within:text-gray-500'>\n                  <label htmlFor='search' className='sr-only'>\n                    Search all assets\n                  </label>\n                  <input\n                    id='search'\n                    type='search'\n                    placeholder='Search all assets'\n                    className='block w-full border-gray-300 rounded-md pl-10 placeholder-gray-500 focus:border-blue-600 focus:ring-blue-600'\n                  />\n                  <div className='absolute inset-y-0 left-0 flex items-center justify-center pl-3'>\n                    <SearchIcon className='h-5 w-5' aria-hidden='true' />\n                  </div>\n                </div>\n              </div>\n              <div className='max-w-8xl mx-auto py-3 px-2 sm:px-4'>\n                {navigation.map((item) => (\n                  <Fragment key={item.name}>\n                    <a\n                      href={item.href}\n                      className='block rounded-md py-2 px-3 text-base font-medium text-gray-900 hover:bg-gray-100'>\n                      {item.name}\n                    </a>\n                    {item.children.map((child) => (\n                      <a\n                        key={child.name}\n                        href={child.href}\n                        className='block rounded-md py-2 pl-5 pr-3 text-base font-medium text-gray-500 hover:bg-gray-100'>\n                        {child.name}\n                      </a>\n                    ))}\n                  </Fragment>\n                ))}\n              </div>\n            </nav>\n          </Transition.Child>\n        </Dialog>\n      </Transition.Root>\n    </header>\n  );\n}\n\n// <nav className='px-4 sm:px-8 lg:px-12'>\n//       <div className='mx-auto max-w-8xl'>\n//         <div className='flex justify-between h-20'>\n//           <div className='flex'>\n//             <div className='flex-shrink-0 flex items-center'>\n//               <NavLink\n//                 to={ROUTE_DEFAULT}\n//                 exact={true}\n//                 className='flex-shrink-0 flex items-center'>\n//                 <Logo img={HodoLogo} alt='Logo' />\n//                 <span className='text-black dark:text-white font-medium text-lg'>\n//                   {process.env.REACT_APP_COMPANY}\n//                 </span>\n//               </NavLink>\n//             </div>\n\n//             <div className='ml-6 flex space-x-6 items-center'>\n//               <NavLink\n//                 to={ROUTE_DEFAULT}\n//                 exact={true}\n//                 className='text-gray-500 dark:text-gray-200 hover:text-gray-800 dark:hover:text-blue-400 inline-flex items-center px-1 text-base font-medium'\n//                 activeClassName='text-gray-900 dark:text-white hover:text-gray-900 dark:hover:text-white'>\n//                 Home\n//               </NavLink>\n//               <NavLink\n//                 to={ROUTE_COLLECTIONS}\n//                 exact={false}\n//                 className='text-gray-500 dark:text-gray-200 hover:text-gray-800 dark:hover:text-blue-400 inline-flex items-center px-1 text-base font-medium'\n//                 activeClassName='text-gray-900 dark:text-white hover:text-gray-900 dark:hover:text-white'>\n//                 Collections\n//               </NavLink>\n//               <NavLink\n//                 to={ROUTE_WALLET}\n//                 exact={true}\n//                 className='text-gray-500 dark:text-gray-200 hover:text-gray-800 dark:hover:text-blue-400 inline-flex items-center px-1 text-base font-medium'\n//                 activeClassName='text-gray-900 dark:text-white hover:text-gray-900 dark:hover:text-white'>\n//                 Wallet\n//               </NavLink>\n//             </div>\n//           </div>\n\n//           <div className='ml-6 flex space-x-4 items-center'>\n//             {account ? <ConnectionBadge /> : <OnboardingButton />}\n//             <DarkToggle />\n//           </div>\n//         </div>\n//       </div>\n//     </nav>\n","import React from \"react\";\n\nexport default function RarityBadge({\n  rarity,\n  className,\n}: {\n  rarity: string;\n  className?: string;\n}) {\n  let badgeClass = \"\";\n\n  switch (rarity) {\n    case \"Rare\":\n      badgeClass = \"bg-red-100 text-red-800\";\n      break;\n\n    case \"Epic\":\n      badgeClass = \"bg-yellow-100 text-yellow-800\";\n      break;\n\n    case \"Common\":\n      badgeClass = \"bg-blue-100 text-blue-800\";\n      break;\n\n    default:\n      badgeClass = \"bg-gray-100 text-gray-800\";\n      break;\n  }\n\n  return (\n    <span\n      className={`inline-flex items-center px-2.5 py-1 rounded-md text-sm font-medium ${badgeClass} ${className}`}>\n      {rarity}\n    </span>\n  );\n}\n","import { NavLink } from \"react-router-dom\";\nimport { ROUTE_ASSETS } from \"../../constants/routes\";\nimport { NFTProps } from \"../../typings/nft\";\nimport RarityBadge from \"../RarityBadge\";\n\nexport default function NFTCard(props: NFTProps) {\n  const { id, img, name, rarity, description, cost, className } = props;\n  const units = \"AVAX\";\n\n  return (\n    <NavLink\n      to={`${ROUTE_ASSETS}/${id}`}\n      className={`${className} flex flex-col rounded-md shadow overflow-hidden transition-transform duration-300 transform hover:-translate-y-2`}>\n      <div className='flex-shrink-0'>\n        <img className='h-54 w-full object-scale-down' src={img} alt={name} />\n      </div>\n      <div className='flex-1 bg-white dark:bg-gray-800 p-4 flex flex-col justify-between'>\n        <div className='flex-1'>\n          <p className='text-base font-semibold text-gray-900 dark:text-gray-100'>\n            {name}\n          </p>\n          <p className='mt-1 text-sm text-gray-600 dark:text-gray-300'>\n            {description}\n          </p>\n        </div>\n        <div className='mt-6 flex items-center justify-between'>\n          <div className='flex-shrink-0'>\n            <RarityBadge rarity={rarity} />\n          </div>\n          <div className='ml-3 text-sm font-medium text-green-600 dark:text-green-500'>\n            {cost} {units}\n          </div>\n        </div>\n      </div>\n    </NavLink>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport MetaMaskOnboarding from \"@metamask/onboarding\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport {\n  TEXT_INSTALL_METAMASK,\n  TEXT_CONNECT,\n  TEXT_CONNECTED,\n} from \"../../constants/text\";\n\nexport default function OnboardingButton() {\n  const [buttonText, setButtonText] = useState(TEXT_INSTALL_METAMASK);\n  const [isDisabled, setDisabled] = useState(false);\n  const onboarding = useRef();\n  const { account } = useWeb3React();\n\n  useEffect(() => {\n    if (!onboarding.current) {\n      onboarding.current = new MetaMaskOnboarding();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (MetaMaskOnboarding.isMetaMaskInstalled()) {\n      if (account) {\n        setButtonText(TEXT_CONNECTED);\n        setDisabled(true);\n        onboarding.current.stopOnboarding();\n      } else {\n        setButtonText(TEXT_CONNECT);\n        setDisabled(false);\n      }\n    }\n  }, [account]);\n\n  const onClick = async () => {\n    try {\n      if (MetaMaskOnboarding.isMetaMaskInstalled()) {\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\n      } else {\n        onboarding.current.startOnboarding();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <button\n      className='btn disabled:opacity-50 disabled:cursor-not-allowed'\n      disabled={isDisabled}\n      onClick={onClick}>\n      {buttonText}\n    </button>\n  );\n}\n","const TEXT_ADDRESS = \"Address\";\nconst TEXT_ALL = \"All\";\nconst TEXT_AVAILABLE_TO_GEO = \"Available in your area\";\nconst TEXT_BALANCE = \"Balance\";\nconst TEXT_BUY = \"Buy\";\nconst TEXT_CAPITAL_CITIES = \"Capital Cities\";\nconst TEXT_COLLECTION = \"Collection\";\nconst TEXT_CONNECT = \"Connect\";\nconst TEXT_CONNECTED = \"Connected\";\nconst TEXT_COORDS = \"Coordinates\";\nconst TEXT_COPYRIGHT = \"\\u00A9 2021 Hodo Network. All rights reserved.\";\nconst TEXT_COST = \"Cost\";\nconst TEXT_COUNTRIES = \"Countries\";\nconst TEXT_DESCRIPTION = \"Description\";\nconst TEXT_GROUP = \"Group\";\nconst TEXT_ID = \"Asset ID\";\nconst TEXT_INSTALL_METAMASK = \"Install MetaMask\";\nconst TEXT_LOCATION = \"Location\";\nconst TEXT_MONUMENTS = \"Monuments\";\nconst TEXT_NETWORK = \"Network\";\nconst TEXT_ONBOARDING = \"Onboarding\";\nconst TEXT_REGION = \"My Region\";\n\nexport {\n  TEXT_ADDRESS,\n  TEXT_ALL,\n  TEXT_AVAILABLE_TO_GEO,\n  TEXT_BALANCE,\n  TEXT_BUY,\n  TEXT_CAPITAL_CITIES,\n  TEXT_COLLECTION,\n  TEXT_CONNECT,\n  TEXT_CONNECTED,\n  TEXT_COORDS,\n  TEXT_COPYRIGHT,\n  TEXT_COST,\n  TEXT_COUNTRIES,\n  TEXT_DESCRIPTION,\n  TEXT_GROUP,\n  TEXT_ID,\n  TEXT_INSTALL_METAMASK,\n  TEXT_LOCATION,\n  TEXT_MONUMENTS,\n  TEXT_NETWORK,\n  TEXT_ONBOARDING,\n  TEXT_REGION,\n};\n","import { Fragment, useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Listbox, Transition } from \"@headlessui/react\";\nimport { CheckIcon, SelectorIcon } from \"@heroicons/react/solid\";\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nexport default function SelectCollection({ collections }) {\n  const history = useHistory();\n  const location = useLocation();\n  const [selected, setSelected] = useState(collections[0]);\n\n  useEffect(() => {\n    const href = `/collections/${selected}`;\n    if (![href].includes(location.pathname)) {\n      history.push(href);\n    }\n  }, [selected]);\n\n  return (\n    <Listbox value={selected} onChange={setSelected}>\n      {({ open }) => (\n        <>\n          <Listbox.Label className='block text-sm font-medium text-gray-700 dark:text-gray-100'>\n            Collection\n          </Listbox.Label>\n          <div className='mt-1 relative z-50'>\n            <Listbox.Button className='bg-white relative w-full border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 sm:text-sm'>\n              <span className='block truncate'>{selected}</span>\n              <span className='absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none'>\n                <SelectorIcon\n                  className='h-5 w-5 text-gray-400'\n                  aria-hidden='true'\n                />\n              </span>\n            </Listbox.Button>\n\n            <Transition\n              show={open}\n              as={Fragment}\n              leave='transition ease-in duration-100'\n              leaveFrom='opacity-100'\n              leaveTo='opacity-0'>\n              <Listbox.Options\n                static\n                className='absolute mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm'>\n                {collections.map((collection) => (\n                  <Listbox.Option\n                    key={collection}\n                    className={({ active }) =>\n                      classNames(\n                        active ? \"text-white bg-blue-600\" : \"text-gray-900\",\n                        \"cursor-default select-none relative py-2 pl-3 pr-9\"\n                      )\n                    }\n                    value={collection}>\n                    {({ selected, active }) => (\n                      <>\n                        <span\n                          className={classNames(\n                            selected ? \"font-semibold\" : \"font-normal\",\n                            \"block truncate\"\n                          )}>\n                          {collection}\n                        </span>\n\n                        {selected ? (\n                          <span\n                            className={classNames(\n                              active ? \"text-white\" : \"text-blue-600\",\n                              \"absolute inset-y-0 right-0 flex items-center pr-4\"\n                            )}>\n                            <CheckIcon className='h-5 w-5' aria-hidden='true' />\n                          </span>\n                        ) : null}\n                      </>\n                    )}\n                  </Listbox.Option>\n                ))}\n              </Listbox.Options>\n            </Transition>\n          </div>\n        </>\n      )}\n    </Listbox>\n  );\n}\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { DarkToggle } from \"../index\";\nimport { MenuAlt2Icon } from \"@heroicons/react/solid\";\nimport {\n  GlobeIcon,\n  CreditCardIcon,\n  CollectionIcon,\n  HomeIcon,\n} from \"@heroicons/react/outline\";\nimport {\n  ROUTE_COLLECTIONS,\n  ROUTE_DEFAULT,\n  ROUTE_EXPLORE,\n  ROUTE_WALLET,\n} from \"../../constants/routes\";\n\nconst sidebarNavigation = [\n  { name: \"Home\", href: ROUTE_DEFAULT, icon: HomeIcon, exact: true },\n  {\n    name: \"Collections\",\n    href: `${ROUTE_COLLECTIONS}/All`,\n    icon: CollectionIcon,\n    exact: false,\n  },\n  { name: \"Expore\", href: ROUTE_EXPLORE, icon: GlobeIcon, exact: false },\n  { name: \"Wallet\", href: ROUTE_WALLET, icon: CreditCardIcon, exact: false },\n];\n\nexport default function Sidebar() {\n  const [mini, setMini] = useState(true);\n\n  return (\n    <div\n      className={`flex flex-col border-r border-gray-800 bg-gray-800 dark:bg-gray-900 ${\n        mini ? \"w-20\" : \"w-80\"\n      }`}>\n      <div className='h-16'>\n        <div\n          className={`flex items-center h-full p-3 ${\n            mini && \"justify-center\"\n          }`}>\n          <button\n            className='text-gray-200 rounded-md px-4 py-3 focus:outline-none'\n            onClick={() => setMini(!mini)}>\n            <MenuAlt2Icon className='w-6 h-6' />\n          </button>\n          <span\n            className={`-ml-1 font-bold text-xl text-white ${\n              mini && \"sr-only\"\n            }`}>\n            Hodo Network\n          </span>\n        </div>\n        {/* \n        <NavLink\n          to={ROUTE_ONBOARDING}\n          exact={true}\n          className={`flex items-center h-16 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-blue-500 p-3 ${\n            mini && \"justify-center\"\n          }`}>\n          <LocationMarkerIcon className='h-8 text-gray-800' />\n          <span className={`ml-2 font-bold text-xl ${mini && \"sr-only\"}`}>\n            Hodo Network\n          </span>\n        </NavLink> */}\n      </div>\n\n      <nav aria-label='Sidebar' className='flex-1 space-y-2 px-3 py-2 sm:py-4'>\n        {sidebarNavigation.map((item) => (\n          <NavLink\n            key={item.name}\n            to={item.href}\n            exact={item.exact}\n            className='text-gray-400 hover:bg-gray-900 dark:hover:bg-gray-800 flex items-center rounded-md px-4 py-3'\n            activeClassName='bg-gray-900 dark:bg-gray-800 text-white'>\n            <item.icon className='h-6 w-6' aria-hidden='true' />\n            <span className={mini ? \"sr-only\" : \"ml-3\"}>{item.name}</span>\n          </NavLink>\n        ))}\n      </nav>\n\n      <div className='flex p-3'>\n        <DarkToggle mini={mini} />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { ethers } from \"ethers\";\nimport BN from \"bn.js\";\nimport { RarityBadge } from \"../../components\";\nimport { collectibles } from \"../../data\";\nimport { WALLET_ADDRESS } from \"../../constants\";\nimport {\n  TEXT_BUY,\n  TEXT_COST,\n  TEXT_DESCRIPTION,\n  TEXT_ID,\n  TEXT_COLLECTION,\n  TEXT_COORDS,\n} from \"../../constants/text\";\n\nexport default function Asset() {\n  const units = \"AVAX\";\n  const { account } = useWeb3React();\n  const { id } = useParams();\n  const [asset, setAsset] = useState();\n\n  const getAsset = (id) => {\n    return collectibles.filter((asset) => {\n      return asset.id === id;\n    });\n  };\n\n  // TODO: replace api call\n  useEffect(() => {\n    // fetch(`${endpoint}/${id}`).then(setAsset);\n    setAsset(getAsset(id)[0]);\n  }, [id]);\n\n  const buyAsset = async () => {\n    // TODO: switch to AVAX network first\n    const val = new BN(asset.cost * 1e18);\n    console.log(\"val\", val);\n    try {\n      const transactionParameters = {\n        from: account,\n        to: WALLET_ADDRESS,\n        value: ethers.utils.hexValue(val),\n        gasPrice: ethers.utils.hexValue(225 * 1e9),\n        gas: ethers.utils.hexValue(21000),\n      };\n      await window.ethereum\n        .request({\n          method: \"eth_sendTransaction\",\n          params: [transactionParameters],\n        })\n        .then((txHash) => console.log(txHash))\n        .catch((error) => console.error);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      {asset && (\n        <div className='p-4 sm:p-8 lg:p-12 mx-auto max-w-8xl'>\n          <div className='md:flex'>\n            <div className='md:w-1/3 md:max-w-lg mb-6'>\n              <div className='w-60 md:w-auto'>\n                <div className='aspect-w-1 aspect-h-1'>\n                  <img src={asset.img} alt={asset.name} />\n                </div>\n              </div>\n            </div>\n\n            <div className='md:w-2/3 md:pl-8'>\n              <div className='flex flex-wrap items-center'>\n                <h3 className='text-3xl uppercase font-medium text-gray-900 dark:text-white'>\n                  {asset.name}\n                </h3>\n\n                <RarityBadge rarity={asset.rarity} className='mt-1 ml-4' />\n              </div>\n\n              <div className='mt-8'>\n                <h1 className='text-sm uppercase font-medium text-gray-500 dark:text-gray-400'>\n                  {TEXT_COLLECTION}\n                </h1>\n                <p className='mt-2 font-medium text-gray-900 dark:text-gray-200 overflow-hidden overflow-ellipsis'>\n                  {asset.group}\n                </p>\n              </div>\n\n              <div className='mt-8'>\n                <h1 className='text-sm uppercase font-medium text-gray-500 dark:text-gray-400'>\n                  {TEXT_DESCRIPTION}\n                </h1>\n                <p className='mt-2 font-medium text-gray-900 dark:text-gray-200 overflow-hidden overflow-ellipsis'>\n                  {asset.description}\n                </p>\n              </div>\n\n              <div className='mt-8'>\n                <h1 className='text-sm uppercase font-medium text-gray-500 dark:text-gray-400'>\n                  {TEXT_COORDS}\n                </h1>\n                <p className='mt-2 font-medium text-gray-900 dark:text-gray-200 overflow-hidden overflow-ellipsis'>\n                  [{asset.location.lat}, {asset.location.lng}]\n                </p>\n              </div>\n\n              <div className='mt-8'>\n                <h1 className='text-sm uppercase font-medium text-gray-500 dark:text-gray-400'>\n                  {TEXT_ID}\n                </h1>\n                <p className='mt-2 font-medium text-gray-900 dark:text-gray-200 overflow-hidden overflow-ellipsis'>\n                  {asset.id}\n                </p>\n              </div>\n\n              <div className='mt-8'>\n                <h1 className='text-sm uppercase font-medium text-gray-500 dark:text-gray-400'>\n                  {TEXT_COST}\n                </h1>\n                <p className='mt-2 font-medium text-gray-900 dark:text-gray-200 overflow-hidden overflow-ellipsis'>\n                  {asset.cost} {units}\n                </p>\n              </div>\n\n              <div className='mt-8 sm:flex'>\n                <div>\n                  <button onClick={buyAsset} className='btn w-full'>\n                    {TEXT_BUY}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","import { useCallback } from \"react\";\nimport { useParams } from \"react-router\";\nimport { SelectCollection, FeaturedNfts } from \"../../components\";\nimport { collectibles } from \"../../data\";\n\nconst collections = collectibles\n  .map((item) => item.group)\n  .filter((value, index, _arr) => _arr.indexOf(value) === index)\n  .concat(\"All\")\n  .sort();\n\nexport default function Collections() {\n  const { name } = useParams();\n\n  // TODO: replace with api calls\n  const getItems = useCallback((type) => {\n    if (type === \"All\") {\n      return collectibles;\n    } else {\n      return collectibles.filter((item) => item.group === type);\n    }\n  }, []);\n\n  return (\n    <div className='p-4 sm:p-8 max-w-8xl'>\n      <div className='mb-8'>\n        <div className='inline-block w-72'>\n          <SelectCollection collections={collections} />\n        </div>\n      </div>\n\n      <div className='grid gap-4 xl:gap-6 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5'>\n        <FeaturedNfts getItems={getItems} type={name} />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { LeafletMap } from \"../../components\";\nimport { collectibles } from \"../../data\";\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nexport default function Explore() {\n  const [selected, setSelected] = useState(collectibles[0]);\n\n  return (\n    <div className='flex h-full'>\n      <section\n        aria-labelledby='primary-heading'\n        className='min-w-0 flex-1 h-full flex flex-col overflow-hidden lg:order-last'>\n        <h1 id='primary-heading' className='sr-only'>\n          Map\n        </h1>\n        <LeafletMap\n          className='h-full w-full object-cover'\n          collectibles={collectibles}\n          selected={selected}\n        />\n      </section>\n\n      <aside className='h-full overflow-hidden hidden lg:block lg:flex-shrink-0 lg:order-first'>\n        <nav\n          aria-label='Sections'\n          className='w-96 h-full bg-white dark:bg-gray-900 border-r border-gray-200 relative hidden flex xl:flex xl:flex-col'>\n          <div className='flex-shrink-0 p-6 border-b border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-900 flex items-center'>\n            <p className='text-lg font-medium text-gray-900 dark:text-gray-100'>\n              Collectibles\n            </p>\n          </div>\n          <div className='min-h-0 overflow-y-auto flex-1'>\n            {collectibles.map((item) => (\n              <div\n                key={item.id}\n                onClick={() => setSelected(item)}\n                tabIndex='0'\n                className={classNames(\n                  item === selected\n                    ? \"bg-gray-100 dark:bg-gray-800\"\n                    : \"hover:bg-gray-100 dark:hover:bg-gray-800\",\n                  \"cursor-pointer flex p-4 border-b border-gray-200 dark:border-gray-800 items-center\"\n                )}>\n                <img\n                  className='flex-shrink-0 -mt-0.5 h-14 w-14'\n                  src={item.img}\n                  alt={item.name}\n                />\n                <div className='ml-3 text-sm overflow-hidden'>\n                  <p className='text-base font-semibold text-gray-900 dark:text-gray-100 truncate'>\n                    {item.name}\n                  </p>\n                  <p className='mt-1 text-sm text-gray-600 dark:text-gray-300 truncate'>\n                    {item.description}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </nav>\n      </aside>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Hero } from \"../../components\";\n\nexport default function Home() {\n  return (\n    <section\n      aria-labelledby='primary-heading'\n      className='px-4 sm:px-8 lg:px-12'>\n      <h1 id='primary-heading' className='sr-only'>\n        Home\n      </h1>\n\n      <Hero />\n    </section>\n  );\n}\n","import React from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { CheckCircleIcon } from \"@heroicons/react/solid\";\nimport { ChainAddButton, OnboardingButton } from \"../../components\";\nimport { TEXT_ONBOARDING } from \"../../constants/text\";\nimport {\n  AVALANCHE_MAINNET_PARAMS,\n  AVALANCHE_TESTNET_PARAMS,\n} from \"../../constants/index\";\n\nexport default function Onboarding() {\n  const { active, account } = useWeb3React();\n\n  return (\n    <div className='p-4 sm:p-8 mx-auto max-w-prose'>\n      <div className='bg-white shadow overflow-hidden sm:rounded-md'>\n        <div className='px-4 py-5 border-b border-gray-200 sm:px-6'>\n          <h3 className='text-xl leading-7 font-medium uppercase text-blue-700 dark:text-blue-500'>\n            {TEXT_ONBOARDING}\n          </h3>\n          <p className='mt-2 text-sm'>\n            Our launch is right around the corner! In the meantime, you can\n            setup an Avalanche wallet so you're ready when the time comes.\n          </p>\n        </div>\n\n        <ul className='divide-y divide-gray-200 text-sm'>\n          <li className='px-4 py-4 sm:px-6'>\n            {active ? (\n              <p className='flex items-center text-sm'>\n                <CheckCircleIcon className='flex-shrink-0 mr-1.5 h-5 w-5 text-green-600' />\n                <span className='text-gray-500 mr-1'>Connected to </span>\n                <span className='font-medium'>{account}</span>\n              </p>\n            ) : (\n              <div>\n                <p className='font-medium text-base'>Connect to MetaMask</p>\n                <p className='mt-1'>\n                  Install the extension and go through the prompts to setup a\n                  new wallet.\n                </p>\n                <div className='mt-4'>\n                  <OnboardingButton />\n                </div>\n              </div>\n            )}\n          </li>\n\n          <li className='px-4 py-4 sm:px-6'>\n            <p className='font-medium text-base'>Use Avalanche</p>\n            <p className='mt-1'>\n              Avalanche isn't a default network so we'll need to add it.\n            </p>\n            <div className='mt-4 flex space-x-4'>\n              <ChainAddButton\n                label='Mainnet'\n                params={AVALANCHE_MAINNET_PARAMS}\n              />\n              <ChainAddButton\n                label='Testnet'\n                params={AVALANCHE_TESTNET_PARAMS}\n              />\n            </div>\n          </li>\n\n          <li className='px-4 py-4 sm:px-6'>\n            <p className='font-medium text-base'>Add Funds</p>\n            <p className='mt-1'>\n              <b>Mainnet</b>: purchase AVAX from an exchange and send it to your\n              wallet address. You may need to{\" \"}\n              <a\n                href='https://wallet.avax.network/'\n                target='_blank'\n                rel='noreferrer'\n                className='text-blue-600 font-medium'>\n                create a wallet\n              </a>{\" \"}\n              with an X-Chain address first. Then make the transfer to your\n              C-Chain address which is what we're creating with MetaMask.\n            </p>\n            <p className='mt-4'>\n              <b>Testnet</b>: you can request test AVAX from the{\" \"}\n              <a\n                href='https://faucet.avax-test.network/'\n                target='_blank'\n                rel='noreferrer'\n                className='text-blue-600 font-medium'>\n                AVAX Test Faucet\n              </a>\n            </p>\n          </li>\n\n          <li className='px-4 py-4 sm:px-6'>\n            <p className='font-medium text-base'>Finished</p>\n            <p className='mt-1'>\n              After we launch you'll be ready to buy your first NFT from Hodo\n              Network.\n            </p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { ChainAddButton } from \"../../components\";\nimport { TEXT_ADDRESS, TEXT_BALANCE, TEXT_NETWORK } from \"../../constants/text\";\nimport {\n  ChainId,\n  AVALANCHE_MAINNET_PARAMS,\n  AVALANCHE_TESTNET_PARAMS,\n} from \"../../constants\";\n\nconst NETWORK_LABELS = {\n  [ChainId.ETHEREUM]: \"Ethereum\",\n  [ChainId.FUJI]: \"Avalanche Fuji Testnet\",\n  [ChainId.AVALANCHE]: \"Avalanche Mainnet C-Chain\",\n};\n\nexport default function Wallet() {\n  const { account, chainId } = useWeb3React();\n\n  return (\n    <div className='p-4 sm:p-8 max-w-8xl'>\n      <div>\n        <h1 className='text-sm uppercase font-medium text-gray-500 dark:text-gray-400'>\n          {TEXT_NETWORK}\n        </h1>\n        <p className='mt-2 font-medium text-gray-900 dark:text-gray-200 overflow-hidden overflow-ellipsis'>\n          {chainId && NETWORK_LABELS[chainId]}\n        </p>\n      </div>\n\n      <div className='mt-4 flex space-x-4'>\n        <ChainAddButton label='Mainnet' params={AVALANCHE_MAINNET_PARAMS} />\n        <ChainAddButton label='Testnet' params={AVALANCHE_TESTNET_PARAMS} />\n      </div>\n\n      <div className='mt-8'>\n        <h1 className='text-sm uppercase font-medium text-gray-500 dark:text-gray-400'>\n          {TEXT_ADDRESS}\n        </h1>\n        <p className='mt-2 font-medium text-gray-900 dark:text-gray-200 overflow-hidden overflow-ellipsis'>\n          {account}\n        </p>\n      </div>\n\n      <div className='mt-8'>\n        <h1 className='text-sm uppercase font-medium text-gray-500 dark:text-gray-400'>\n          {TEXT_BALANCE}\n        </h1>\n        <p className='mt-2 font-medium text-gray-900 dark:text-gray-200 overflow-hidden overflow-ellipsis'>\n          {\"coming soon\"}\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useEagerConnect, useInactiveListener } from \"../hooks\";\nimport { Asset, Collections, Explore, Home, Onboarding, Wallet } from \".\";\nimport { Navbar, Sidebar } from \"../components\";\nimport {\n  ROUTE_DEFAULT,\n  ROUTE_ASSETS,\n  ROUTE_ONBOARDING,\n  ROUTE_COLLECTIONS,\n  ROUTE_WALLET,\n  ROUTE_EXPLORE,\n} from \"../constants/routes\";\nimport \"../styles/tailwind.output.css\";\n\nexport default function App() {\n  const context = useWeb3React<Web3Provider>();\n  const { connector } = context;\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = useState<any>();\n  useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]);\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect();\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector);\n\n  return (\n    <div className='bg-gray-100 dark:bg-gray-900 flex flex-row h-screen overflow-hidden'>\n      <Router>\n        <Route\n          render={({ location }) =>\n            [ROUTE_ONBOARDING].includes(location.pathname) ? null : <Sidebar />\n          }\n        />\n\n        <div className='flex flex-col flex-1 min-h-0 overflow-hidden'>\n          <Route\n            render={({ location }) =>\n              [ROUTE_ONBOARDING].includes(location.pathname) ? null : <Navbar />\n            }\n          />\n\n          <main className='min-w-0 flex-1 overflow-y-scroll'>\n            <Switch>\n              <Route path={ROUTE_ONBOARDING} exact component={Onboarding} />\n              <Route path={ROUTE_DEFAULT} exact component={Home} />\n              <Route\n                path={`${ROUTE_COLLECTIONS}/:name`}\n                component={Collections}\n              />\n              <Route path={`${ROUTE_ASSETS}/:id`} exact component={Asset} />\n              <Route path={ROUTE_EXPLORE} exact component={Explore} />\n              <Route path={ROUTE_WALLET} exact component={Wallet} />\n            </Switch>\n          </main>\n        </div>\n      </Router>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { injected } from \"../connectors\";\n\nexport default function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React();\n\n  useEffect((): any => {\n    const { ethereum } = window as any;\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\");\n        activate(injected);\n      };\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId);\n        activate(injected);\n      };\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n        if (accounts.length > 0) {\n          activate(injected);\n        }\n      };\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId);\n        activate(injected);\n      };\n\n      ethereum.on(\"connect\", handleConnect);\n      ethereum.on(\"chainChanged\", handleChainChanged);\n      ethereum.on(\"accountsChanged\", handleAccountsChanged);\n      ethereum.on(\"networkChanged\", handleNetworkChanged);\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener(\"connect\", handleConnect);\n          ethereum.removeListener(\"chainChanged\", handleChainChanged);\n          ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\n          ethereum.removeListener(\"networkChanged\", handleNetworkChanged);\n        }\n      };\n    }\n  }, [active, error, suppress, activate]);\n}\n","import { useState, useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { injected } from \"../connectors\";\n\nexport default function useEagerConnect() {\n  const { activate, active } = useWeb3React();\n\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, []); // intentionally only running on mount (make sure it's only mounted once\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n\n  return tried;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createWeb3ReactRoot, Web3ReactProvider } from \"@web3-react/core\";\nimport { NetworkContextName } from \"./constants\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport getLibrary from \"./utils/getLibrary\";\nimport App from \"./pages/App\";\n\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName);\n\nReactDOM.render(\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <Web3ProviderNetwork getLibrary={getLibrary}>\n      <App />\n    </Web3ProviderNetwork>\n  </Web3ReactProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}